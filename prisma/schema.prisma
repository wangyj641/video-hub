// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Video         Video[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Video {
  id         Int       @id @default(autoincrement())
  title      String    @unique
  desc       String?
  pic        String
  authorId   String
  author     User      @relation(fields: [authorId], references: [id])
  categoryId Int
  category   Category  @relation(fields: [categoryId], references: [id])
  level      Int       @default(1)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  chapter    Chapter[]
}

model Category {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  video Video[]
}

model Chapter {
  id      Int    @id @default(autoincrement())
  title   String
  cover   String
  url     String
  videoId Int
  video   Video? @relation(fields: [videoId], references: [id])
}
